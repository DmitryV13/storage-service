{"ast":null,"code":"var _jsxFileName = \"D:\\\\Applications\\\\Web\\\\storageservice\\\\storageservice-f\\\\src\\\\api\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\") || \"\"); // Инициализация токена из localStorage\n\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    setToken(\"\");\n  }, []);\n\n  // Сохраняем токен в localStorage при его обновлении\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem(\"token\", token);\n    } else {\n      localStorage.removeItem(\"token\");\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      setToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"8/sWzQXGhbvJceiuygp71WCtpNM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","removeItem","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/Applications/Web/storageservice/storageservice-f/src/api/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(() => localStorage.getItem(\"token\") || \"\"); // Инициализация токена из localStorage\r\n\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"token\");\r\n    setToken(\"\");\r\n    \r\n  }, []);\r\n\r\n  // Сохраняем токен в localStorage при его обновлении\r\n  useEffect(() => {\r\n    if (token) {\r\n      localStorage.setItem(\"token\", token);\r\n    } else {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n  }, [token]);\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, setToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAMU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;EAE/EV,SAAS,CAAC,MAAM;IACdS,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;IAChCH,QAAQ,CAAC,EAAE,CAAC;EAEd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAR,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,EAAE;MACTE,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;IACtC,CAAC,MAAM;MACLE,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAGX,oBACEL,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEP,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC9CA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CAxBWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AA0BzB,OAAO,MAAMgB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACK,WAAW,CAAC;AAAA;AAACkB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}